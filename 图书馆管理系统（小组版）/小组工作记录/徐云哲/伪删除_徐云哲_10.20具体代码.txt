伪删除图书(单一条件单一删除)：

(问题：怎么定位到哪个结构体需要删除，一开始没法知道所以book *b的参数是传不了的，所以应该怎么利用distance来确定)

//根据书籍编号（bookId）
void falseDeleteBookbyId(book *b, unsigned int bookId)
{
    int distance = searchInstanceOfbook（bookId ）;  
    if (distance>=0)
    {
	int choice;
	cout<<"确定删除？ 1.删除 0.返回"<<endl;
	cin>>choice;
	if(choice==1)
	{
		b->isDelete = true; 
		writeFile(*Book,filename,distance,2); 
		cout<<"删除图书成功!"<<endl;
        	return ;
	}
	else if(choice==0)
	{
		return ;
	}
    }
    else
        cout<<"没有查询到本书,无法删除!"<<endl;
}

//根据书籍分类（bookClass）
void falseDeleteBookbyClass(book *b, int bookClass)
{
        searchBookClass(bookClass);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍价格区间（price）
void falseDeleteBookbyPrice(book *b, float price1，float price2)
{
        searchPrice(price1,price2);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍名称（bookName）
void falseDeleteBookbyName(book *b, char[20] name)
{
        searchName(name);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍出版社（publisher）
void falseDeleteBookbyPublisher(book *b, char[20] publisher)
{
        searchPublisher(publisher);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍作者（author）
void falseDeleteBookbyAuthor(book *b, char[8] author)
{
        searchAuthor(author);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍出版年份（publishDate）
void falseDeleteBookbyPublishDate(book *b, char[8] publishDate)
{
        searchPublishDate(publishDate);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}

//根据书籍借出时间（borrowTime）
void falseDeleteBookbyBorrowTime(book *b, char[10] borrowTime)
{
        searchBorrowTime(borrowTime);   
    	unsigned int deleteBookId;
	cout<<"请输入要删除书籍的编号：";
	cin>>deleteBookId;
	falseDeleteBookbyId(b,deleteBookId);
	return ;
}



//各类删除调用
void falseDeleteBook(book *b)
{	
	int choice;
	while(choice!=0)
	{
		cout<<"请选择删除依据："<<endl<<endl;
		cout<<"    1.书籍编号"<<endl;
		cout<<"    2.书籍分类"<<endl;
		cout<<"    3.书籍价格区间"<<endl;
		cout<<"    4.书籍名称"<<endl;
		cout<<"    5.书籍出版社"<<endl;
		cout<<"    6.书籍作者"<<endl;
		cout<<"    7.书籍出版年份"<<endl;
		cout<<"    8.书籍借出时间"<<endl;
        	cout<<"    0.退出删除界面"<<endl<<endl;
		cin>>choice;
		switch (choice)
		{
			case '1':
				unsigned int id;
				cout<<"请输入书籍编号：";
				cin>>id;
				falseDeleteBookbyId(b,id);
				break;
			case '2':
				int class;
				cout<<"请输入书籍分类：";
				cin>>class;
				falseDeleteBookbyClass(b,class);
				break;
			case '3':
				float price1;
				float price2;
				cout<<"请输入书籍价格区间：如（0.0  1.0）";
				cin>>price1>>price2; 
				falseDeleteBookbyPrice(b,price1,price2);
				break;
			case '4':
				char name[20];
				cout<<"请输入书籍名称：";
				cin>>name;
				falseDeleteBookbyName(b,name);
				break;
			case '5':
				char pub[20];
				cout<<"请输入书籍出版社：";
				cin>>pub;
				falseDeleteBookbyPublisher(b,pub);
				break;
			case '6':
				char aut[8];
				cout<<"请输入书籍作者：";
				cin>>aut;
				falseDeleteBookbyAuthor(b,aut);
				break;
			case '7':
				char year[8];
				cout<<"请输入书籍出版年份：";
				cin>>year;
				falseDeleteBookbyPublishDate(b,year);
				break;
			case '8':
				char time[10];
				cout<<"请输入书籍借出时间：";
				cin>>time;
				falseDeleteBookbyBorrowTime(b,time);
				break;
			case '0':
				//转向上一级界面
				break;
			default:
				cout<<"输入错误，请从新输入:";
				
}
