1.单项真删除，单项伪删除均测试成功。个人部分都写在main.cpp中。其余部分为小组其他成员所写，代码中有注释。

2.注释掉的代码暂时未测试，但是属于删除的预备功能，看后期情况。

3.由于读取出来的测试文件中没有真删除标志位，暂用伪删除标志位，且类型仍然用的是bool类型，char类型的代码在旁边，暂被注释掉。

4.真删除表暂时采取全部读取，新增后全部再写入的方式。（老实说是因为暂时不知道怎么部分读写，O(∩_∩)O哈哈~）且为方便测试观看，文件暂为txt文件。（未测试.dat格式，所以不知道该读写方法是否可用在二进制文件中）由于写了回车换行符，所以一行就1个数据，方便观看。

5.真删除两个文件均只存一个条目，分别是编号和distance，对于distance那个文件增加覆盖时只需读取第一个distance且用完后删除。（此处@刘真）

6.如何利用我的工程进行测试说明：
	a.打开工程后，打开main.cpp，拉到最下端，有三个调用函数，分别是伪删除，真删除，测试用的恢复标志位函数。默认首先测试伪删除。其余两项均被注
释。

	b.编译运行，确定删除，编号为1的书本删除标志位修改成功。（此时逾期标志位也被修改，原因未查，可能是测试文件中的逾期标志位和伪删除标志位有猫腻）

	c.修改&bookArray[0]中的0进行继续测试即可，范围0~9，分别表示编号为1~10的十本书。

	d.然后利用恢复函数可将被伪删除的标志位全部恢复，以便进行真删除测试。（或者直接把测试数据删了，换成未被修改前的测试数据）

	e.进行真删除测试，由于还是用的伪删除标志位，所以界面测试效果和伪删除一样。但是会新增两个文件，即真删除表，可打开查看是否测试成功。

7.组长连接代码说明：需要新增#include<vector>,然后可用的就是伪删除，真删除两个函数，恢复那个其实也可以利用，不过伪删除和恢复都与学姐的修改删除标志位有冗余。哈哈，你看着办吧。